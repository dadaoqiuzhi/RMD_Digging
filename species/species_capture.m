%scrit file name species_capture
%purpose:
%This program is used to analysis species file
%version 1;2018.6.22
disp('##################################################################################################################################')
disp('Welcome!--by Qiang Liu @Institute of Nuclear Physics and Chemistry, China Academy of Engineering Physics; Email: liubinqiang@163.com');
disp('Repository adress of the Source code on github: https://github.com/dadaoqiuzhi/RMD_Digging');
disp('References: 1.Fuel 287 (2021) 119484. 2.ACS Appl. Mat. Interfaces 13(34) (2021) 41287-41302. 3.ACS Appl. Mat. Interfaces 2022, 14.(4), 5959-5972.')
disp('4.ACS Materials Letters 2023, 2174-2188. More work is coming!')
fprintf('One can obtain the interested species by this procedure without running species_analysis (need much memory), \nthe first three columns are always exported')

species=input('\nPlease input the molecular formula, should be lin line with the species file, especially the element sequence, \nmultiple molecular formulas can be seperated by white space: \n','s');
species=upper(species);
species=strtrim(species);
species=strsplit(species);
if exist('outputdata','var')
    msgbox('outputdata is existent , please make sure it is generated by species_analysis procedure');
    fprintf('\n\nspecies_capture is running, please wait...\n\n')
    outputdatast=outputdata(1,:);
    datamatch=[];find=0;
    for i=1:length(species)
        for j=1:length(outputdatast)
            if strcmpi(species{i},(outputdatast{j}))
                find=1;
                datamatch(1,size(datamatch,2)+1)=size(datamatch,2)+1;
                datamatch(2,size(datamatch,2))=j;
            end
        end
        if find~=1
            fprintf('\nProduct is not found!',species{i});
        end
        find=0;
    end
    
    [~,checkcol]=size(datamatch);
    if checkcol~=length(species)
        if isempty(datamatch)
            fprintf('Not match the interested species, please check it!');
            %         return;
        else
            fprintf('Some species are not matched, please check it!');
            %         return;
        end
    end
    if sum(ismember(datamatch,0))>=1
        fprintf('Match error, please check it and try to clear up the work space!');
        %     return;
    end
    
    
    outputdatanew={};
    for k=1:3
        outputdatanew(:,k)=outputdata(:,k);
    end
    for j=1:size(datamatch,2)
        outputdatanew(:,j+3)=outputdata(:,datamatch(2,j));
    end
    fprintf('\nResults of species_capture are saved in outputdatanew')
    
    
    
    
    
    
else
    fprintf('\nNot run species_analysis in advance (need much memory), analyze the species step by step\n')
    dataname=input('\nPlease input the file name of the species.* file: \n','s');
    fprintf('\nspecies_capture is running, please wait...\n')
    outputdata_copy={};
    rawdata=fopen(dataname,'r');
    dataline=fgetl(rawdata);
    datacell=textscan(dataline,'%s','delimiter','\n');
    datacellchar=char(datacell{1});
    datadel=strrep(datacellchar,'#','');
    datarep=strtrim(datadel);
    datasplit=strsplit(datarep);
    datacellnum=length(datasplit);
    species_copy(1,1:3)={'Timestep','No_Moles','No_Specs'};
    for i=1:size(species,2)
        species_copy{1,3+i}=species{i};
    end
    outputdatanew={};
    outputdatanew=species_copy(1,:);
    outputdata_copy(1,:)=species_copy(1,:);
    outputdata_copy(2,:)=num2cell(zeros([1 length(species_copy)]));
    for j=1:datacellnum
        for k=1:size(outputdata_copy,2)
            if strcmpi(datasplit{j},outputdata_copy{1,k})
                outputdata_copy{2,k}=j;
            end
        end
    end
    datalinenum=fgetl(rawdata);
    datalinenum=strtrim(datalinenum);
    datalinenum=strread(datalinenum);
    for i=1:size(outputdata_copy,2)
        if outputdata_copy{2,i}~=0
        outputdata_copy{2,i}=datalinenum(outputdata_copy{2,i});
        end
    end
    outputdatanew(2,:)=outputdata_copy(2,:);
    
    
    while ~feof(rawdata)
        dataline=fgetl(rawdata);
        if ~isempty(dataline)
            datacell=textscan(dataline,'%s','delimiter','\n');
            datacellchar=char(datacell{1});
            datadel=strrep(datacellchar,'#','');
            datarep=strtrim(datadel);
            datasplit=strsplit(datarep);
            datacellnum=length(datasplit);
            
            outputdata_copy(2,:)=num2cell(zeros([1 length(species_copy)]));
            for j=1:datacellnum
                for k=1:size(outputdata_copy,2)
                    if strcmpi(datasplit{j},outputdata_copy{1,k})
                        outputdata_copy{2,k}=j;
                    end
                end
            end
            datalinenum=fgetl(rawdata);
            datalinenum=strtrim(datalinenum);
            datalinenum=strread(datalinenum);
            for i=1:size(outputdata_copy,2)
                if outputdata_copy{2,i}~=0
                    outputdata_copy{2,i}=datalinenum(outputdata_copy{2,i});
                end
            end
            outputdatanew(size(outputdatanew,1)+1,:)=outputdata_copy(2,:);
        end
    end
    fclose(rawdata);
    for i=1:size(outputdatanew,2) 
        if sum(cell2mat(outputdatanew(2:end,i)))==0
            fprintf('Not match the species %s, there maybe no this species or input error, please check it!',outputdatanew{1,i});
        end
    end
end




expoans=input('\nExport to excel? y/n: \n','s');
expoans=lower(expoans);
if expoans=='y'
    [dataoutrow,dataoutcol]=size(outputdatanew);
    dataoutputrow=strcat('A','1');
    dataoutcolchar=char(65+dataoutcol-1);
    dataoutputcol=strcat(dataoutcolchar,num2str(dataoutrow));
    filename='output_mydata.xlsx';
    xlswrite(filename,outputdatanew,dataoutputrow:dataoutputcol)
    fprintf('\nResults from species_capture are exported to excel:output_mydata')
end
fprintf('\nspecies_capture is successfully finished\n\n')
disp('Results of species_capture are saved in outputdatanew')

clear datamatch dataoutcol dataoutrow dataoutcolchar dataoutputcol  dataoutputrow i j k outputdatast 
clear filename expoans checkrow checkcol find outputdata_copy datacell datacellchar datacellnum datadel dataline 
clear datalinenum dataname datarep datasplit rawdata 