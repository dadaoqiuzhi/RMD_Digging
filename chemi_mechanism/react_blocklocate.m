%scrit file name react_blocklocate
%purpose:
%This program is used to locate the target reactant block seperated by '#' in
%tarBOinform generated by bonds_analysis_speedup program of product whose
%BO information is stored in tarBOinformcopy;frameproact contains >=7
%columns, namely the product number of the specified frame, the start-stop row number of product, the total line of product,
%the Timestep of reactant of corresponding product, the  start-stop row number of the product in the
%frame containing reactant, 0 indicates no valid
function frameproact=react_blocklocate(tarBOinformcopy,tarBOinform,tartrajectory)
frameproact=[];[row,~]=size(tarBOinformcopy);ii=0;reactantnum=[];
jj=0;
for i=1:row
    jj=jj+1;
    if strcmp(tarBOinformcopy(i,1),'#')
        ii=ii+1;
        frameproact(ii,1)=ii;
        if ii==1
            frameproact(ii,2)=1;
            frameproact(ii,3)=jj;
            frameproact(ii,4)=frameproact(ii,3)-frameproact(ii,2)+1;
        else
            frameproact(ii,2)=frameproact(ii-1,3)+1;
            frameproact(ii,3)=jj;
            frameproact(ii,4)=frameproact(ii,3)-frameproact(ii,2)+1;
        end
        frameproact(ii,5)=0;
        frameproact(ii,6)=0;
        frameproact(ii,7)=0;
    end
end

[prorow,~]=size(tarBOinform);ii=0;jj=0;
for i=1:prorow
    jj=jj+1;
    if strcmp(tarBOinform(i,1),'#')
        ii=ii+1;
        if ii==1
            reactantnum(ii,1)=1;
            reactantnum(ii,2)=jj;
            reactantnum(ii,3)=reactantnum(ii,2)-reactantnum(ii,1)+1;
        else
            reactantnum(ii,1)=reactantnum(ii-1,2)+1;
            reactantnum(ii,2)=jj;
            reactantnum(ii,3)=reactantnum(ii,2)-reactantnum(ii,1)+1;
        end
    end
end

[jj,~]=size(reactantnum);[ii,~]=size(frameproact);

for i=1:jj
    for j=1:ii
        if frameproact(j,4)==reactantnum(i,3)
            if isequal(sortrows(tarBOinform(reactantnum(i,1):reactantnum(i,2)-1,:),1),sortrows(tarBOinformcopy(frameproact(j,2):frameproact(j,3)-1,:),1))
                [~,proactcol]=size(frameproact);index=[];
                for m=6:proactcol
                    if frameproact(j,m)==0
                        lenindex=length(index);index(lenindex+1)=m;
                    end
                end
                lenindex=length(index);
                if lenindex==0
                    frameproact(j,proactcol+1)=0;
                    frameproact(j,proactcol+2)=0;
                else
                    frameproact(j,index(1))=0;
                    frameproact(j,index(2))=0;
                end
            end
        else
            for k=1:reactantnum(i,3)-1
                for kk=1:frameproact(j,4)-1
                    onoff=0;
                    if tarBOinform{reactantnum(i,1)+k-1,1}==tarBOinformcopy{frameproact(j,2)+kk-1,1}
                        onoff=1;
                        frameproact(j,5)=tartrajectory{1};
                        [~,proactcol]=size(frameproact);index=[];
                        for m=6:proactcol
                            if frameproact(j,m)==0
                                lenindex=length(index);index(lenindex+1)=m;
                            end
                        end
                        lenindex=length(index);
                        if ~ismember(reactantnum(i,1),frameproact(j,6:proactcol))
                            if lenindex==0
                                frameproact(j,proactcol+1)=reactantnum(i,1);
                                frameproact(j,proactcol+2)=reactantnum(i,2);
                            else
                                frameproact(j,index(1))=reactantnum(i,1);
                                frameproact(j,index(2))=reactantnum(i,2);
                            end
                        end
                    end
                    if onoff==1
                        break;
                    end
                end
            end 
        end
    end
end

    




